<?xml version="1.0" encoding="UTF-8" ?>
<schema name="example" version="1.5">
  
	<!--必须有，不能删去-->
	<field name="_version_" type="long" indexed="true" stored="true"/>

	<field name="_root_" type="string" indexed="true" stored="false"/>

	<!--
		自定义的字段
		name就是字段名称，type就是字段的类型，这个类型就是下面的fileType中的类型 
		indexed表示是否为该字段创建索引 
		store表示是否给这个索引创建存储文件，如果我们指定一个字段，并允许为它创建索引，但是不存储的话，我们用这个索引去查询时，就会为null  
		multiValued比较简单了，即是否有重复
		
		<field name="productId" type="int" indexed="true" stored="true" required="true" multiValued="false" /> 
		<field name="productCode" type="string" indexed="true" stored="true"/>
		<field name="productName" type="text_ik" indexed="true" stored="true"/>
		
		特别注意第三个productName 我们指定的是自己定义的text_ik，即表示按照这个类型来存储productName, 而这个类型下面我们会介绍，是按照Ik分词器来进行分词存储
	-->

	<!--
		指定这个文档中的主键
		<uniqueKey>productId</uniqueKey>
	-->
	
	
	<!--
		动态字段，即solr也允许对schema中用户没有定义的字段进行索引，例如下面的*_i，使用了通配符*, 那么它的意思就很明确了，假设此时我们从代码中存入了一个域为title_i
		而上面我们自定义的字段中却没有这个，那么就可以使用动态字段，把title_i索引到*_i中去，所以，通常我们会建议用户定义一些动态字段，以防万一
		<dynamicField name="*_i"  type="int"    indexed="true"  stored="true"/>
		<dynamicField name="*_is" type="int"    indexed="true"  stored="true"  multiValued="true"/>
		<dynamicField name="*_s"  type="string"  indexed="true"  stored="true" />
		<dynamicField name="*_ss" type="string"  indexed="true"  stored="true" multiValued="true"/>
		<dynamicField name="*_l"  type="long"   indexed="true"  stored="true"/>
		<dynamicField name="*_ls" type="long"   indexed="true"  stored="true"  multiValued="true"/>
		<dynamicField name="*_t"  type="text_general"    indexed="true"  stored="true"/>
		<dynamicField name="*_txt" type="text_general"   indexed="true"  stored="true" multiValued="true"/>
		
		它定义的方式和filed中其实是类似的
	-->
	<dynamicField name="*_en"  type="text_en"    indexed="true"  stored="true" multiValued="true"/>
	<dynamicField name="*_b"  type="boolean" indexed="true" stored="true"/>
	<dynamicField name="*_bs" type="boolean" indexed="true" stored="true"  multiValued="true"/>
	<dynamicField name="*_f"  type="float"  indexed="true"  stored="true"/>
	<dynamicField name="*_fs" type="float"  indexed="true"  stored="true"  multiValued="true"/>
	<dynamicField name="*_d"  type="double" indexed="true"  stored="true"/>
	<dynamicField name="*_ds" type="double" indexed="true"  stored="true"  multiValued="true"/>
	<dynamicField name="*_coordinate"  type="tdouble" indexed="true"  stored="false" />
	<dynamicField name="*_dt"  type="date"    indexed="true"  stored="true"/>
	<dynamicField name="*_dts" type="date"    indexed="true"  stored="true" multiValued="true"/>
	<dynamicField name="*_p"  type="location" indexed="true" stored="true"/>
	<dynamicField name="*_ti" type="tint"    indexed="true"  stored="true"/>
	<dynamicField name="*_tl" type="tlong"   indexed="true"  stored="true"/>
	<dynamicField name="*_tf" type="tfloat"  indexed="true"  stored="true"/>
	<dynamicField name="*_td" type="tdouble" indexed="true"  stored="true"/>
	<dynamicField name="*_tdt" type="tdate"  indexed="true"  stored="true"/>
	<dynamicField name="*_c"   type="currency" indexed="true"  stored="true"/>
	<dynamicField name="ignored_*" type="ignored" multiValued="true"/>
	<dynamicField name="attr_*" type="text_general" indexed="true" stored="true" multiValued="true"/>
	<dynamicField name="random_*" type="random" />

	<!--
		copyField 即组合字段，例如此时我们的文章中有title和content两部分，此时我们希望同时从这两部分中搜索带java关键词的有哪些，solr
		就不能像sql那样可以这样写： title like "%java%" or content like "%java%", 那么它又怎么做呢？答案就是在创建索引时，我们可以指定这两个部分同时
		放在一个索引中，这个索引是就是用copyField这个组合字段来表示。
		
		例子：假设此时有两个字段
		<field name="title" type="string" indexed="true" stored="true"/>
		<field name="content" type="string" indexed="true" stored="true"/>
		
		此时把这两个字段放入一个组合字段中：
		<copyField source="title" dest="titleAndcontent" maxChars="25000"/>
		<copyField source="content" dest="titleAndcontent" maxChars="25000"/>
		
		我们发现用法就是source是指向字段的name，即title和content，而dest就是这个组合字段的名字，我们定义为titleAndcontent，但是既然是组合字段，则dest肯定要相同
		不然就是两个组合了
		
	-->
	
	
	<!--
		filedType 即solr中定义的一些基本数据类型，可以理解为和java的int lang char boolean等类似，它的主要目的就是告诉solr这些类型的数据应该怎么处理
		同时，当一个filedType是solr的TextFiled时，还会有一个analyzer属性，即分析器
	-->
	<fieldType name="string" class="solr.StrField" sortMissingLast="true" />
	<fieldType name="boolean" class="solr.BoolField" sortMissingLast="true"/>
    <fieldType name="int" class="solr.TrieIntField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="float" class="solr.TrieFloatField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="long" class="solr.TrieLongField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="double" class="solr.TrieDoubleField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="tint" class="solr.TrieIntField" precisionStep="8" positionIncrementGap="0"/>
    <fieldType name="tfloat" class="solr.TrieFloatField" precisionStep="8" positionIncrementGap="0"/>
    <fieldType name="tlong" class="solr.TrieLongField" precisionStep="8" positionIncrementGap="0"/>
    <fieldType name="tdouble" class="solr.TrieDoubleField" precisionStep="8" positionIncrementGap="0"/>
    <fieldType name="date" class="solr.TrieDateField" precisionStep="0" positionIncrementGap="0"/>
    <fieldType name="tdate" class="solr.TrieDateField" precisionStep="6" positionIncrementGap="0"/>
    <fieldType name="binary" class="solr.BinaryField"/>
    <fieldType name="random" class="solr.RandomSortField" indexed="true" />
    <fieldType name="text_ws" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
      </analyzer>
    </fieldType>
    <fieldType name="text_general" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>
    <fieldType name="text_en" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="lang/stopwords_en.txt"
                />
        <filter class="solr.LowerCaseFilterFactory"/>
		<filter class="solr.EnglishPossessiveFilterFactory"/>
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
        <filter class="solr.PorterStemFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="lang/stopwords_en.txt"
                />
        <filter class="solr.LowerCaseFilterFactory"/>
		<filter class="solr.EnglishPossessiveFilterFactory"/>
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
        <filter class="solr.PorterStemFilterFactory"/>
      </analyzer>
    </fieldType>
    <fieldType name="text_en_splitting" class="solr.TextField" positionIncrementGap="100" autoGeneratePhraseQueries="true">
      <analyzer type="index">
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="lang/stopwords_en.txt"
                />
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
        <filter class="solr.PorterStemFilterFactory"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="lang/stopwords_en.txt"
                />
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
        <filter class="solr.PorterStemFilterFactory"/>
      </analyzer>
    </fieldType>
    <fieldType name="text_en_splitting_tight" class="solr.TextField" positionIncrementGap="100" autoGeneratePhraseQueries="true">
      <analyzer>
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="false"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="lang/stopwords_en.txt"/>
        <filter class="solr.WordDelimiterFilterFactory" generateWordParts="0" generateNumberParts="0" catenateWords="1" catenateNumbers="1" catenateAll="0"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords.txt"/>
        <filter class="solr.EnglishMinimalStemFilterFactory"/>
        <filter class="solr.RemoveDuplicatesTokenFilterFactory"/>
      </analyzer>
    </fieldType>
    <fieldType name="text_general_rev" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.ReversedWildcardFilterFactory" withOriginal="true"
           maxPosAsterisk="3" maxPosQuestion="2" maxFractionAsterisk="0.33"/>
      </analyzer>
      <analyzer type="query">
        <tokenizer class="solr.StandardTokenizerFactory"/>
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" />
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>
    <fieldType name="alphaOnlySort" class="solr.TextField" sortMissingLast="true" omitNorms="true">
      <analyzer>
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory" />
        <filter class="solr.TrimFilterFactory" />
        <filter class="solr.PatternReplaceFilterFactory"
                pattern="([^a-z])" replacement="" replace="all"
        />
      </analyzer>
    </fieldType>
    <fieldType name="lowercase" class="solr.TextField" positionIncrementGap="100">
      <analyzer>
        <tokenizer class="solr.KeywordTokenizerFactory"/>
        <filter class="solr.LowerCaseFilterFactory" />
      </analyzer>
    </fieldType>
    <fieldType name="ignored" stored="false" indexed="false" multiValued="true" class="solr.StrField" />
    <fieldType name="point" class="solr.PointType" dimension="2" subFieldSuffix="_d"/>
    <fieldType name="location" class="solr.LatLonType" subFieldSuffix="_coordinate"/>
    <fieldType name="location_rpt" class="solr.SpatialRecursivePrefixTreeFieldType"
        geo="true" distErrPct="0.025" maxDistErr="0.001" distanceUnits="kilometers" />
    <fieldType name="bbox" class="solr.BBoxField"
               geo="true" distanceUnits="kilometers" numberType="_bbox_coord" />
    <fieldType name="_bbox_coord" class="solr.TrieDoubleField" precisionStep="8" docValues="true" stored="false"/>
    <fieldType name="currency" class="solr.CurrencyField" precisionStep="8" defaultCurrency="USD" currencyConfig="currency.xml" />
	
	
	
	<!-- asnj 分词 
	<fieldType name="text_asnj" class="solr.TextField" positionIncrementGap="100">
      <analyzer type="index">     
        <tokenizer class="org.ansj.solr.ANSJTokenizerFactory" isQuery="false"/>
      </analyzer>
      <analyzer type="query">     
        <tokenizer class="org.ansj.solr.ANSJTokenizerFactory" isQuery="true"/>
      </analyzer>
    </fieldType>
	-->
	
	<!-- 
		ik 分词
	-->
	<fieldType name="text_ik" class="solr.TextField">   
	  <analyzer type="index">
		<tokenizer class="org.wltea.analyzer.lucene.IKTokenizerFactory" useSmart="false" />
	  </analyzer>
	  <analyzer type="query">
		<tokenizer class="org.wltea.analyzer.lucene.IKTokenizerFactory" useSmart="true" />
	  </analyzer>
	</fieldType>
</schema>
